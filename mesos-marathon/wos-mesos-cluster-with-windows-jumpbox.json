{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "linuxAdminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "User name for the Linux Virtual Machines (SSH or Password)."
            }
        },
        "linuxAdminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Password for the Linux Virtual Machine.  Not Required.  If not set, you must provide a SSH key."
            }
        },
        "sshRSAPublicKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SSH public key used for auth to all Linux machines.  Not Required.  If not set, you must provide a password key."
            }
        },
        "windowsAdminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "User name for the Windows Jumpbox Virtual Machine (Password Only Supported)."
            }
        },
        "windowsAdminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Password for the Windows Jumpbox Virtual Machine."
            }
        },
        "jumpboxEndpointDNSNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "Sets the Domain name label for the jumpbox.  The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
            }
        },
        "masterEndpointDNSNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "Sets the Domain name label for the master IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
            }
        },
        "agentEndpointDNSNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "Sets the Domain name label for the agent pool IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
            }
        },
        "agentCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The number of Mesos agents for the cluster.  This value can be from 1 to 100"
            },
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100
            ]
        },
        "masterCount": {
            "type": "int",
            "defaultValue": 1,
            "allowedValues": [
                1,
                3,
                5
            ],
            "metadata": {
                "description": "The number of Mesos masters for the cluster."
            }
        },
        "agentVMSize": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "allowedValues": [
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4"
            ],
            "metadata": {
                "description": "The size of the Virtual Machine. Allowable machine values are 1 core (A1), 2 core (A2), 4 core (A3), 8 core (A4)."
            }
        },
        "linuxPublisher": {
            "type": "string",
            "defaultValue": "Canonical",
            "metadata": {
                "description": "This is the publisher of the image used by the linux cluster"
            }
        },
        "linuxOffer": {
            "type": "string",
            "defaultValue": "UbuntuServer",
            "metadata": {
                "description": "This is the offer of the image used by the linux cluster"
            }
        },
        "linuxSku": {
            "type": "string",
            "defaultValue": "14.04.3-LTS",
            "metadata": {
                "description": "This is the linux sku used by the linux cluster"
            }
        },
        "linuxVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "This is the linux version used by the linux cluster"
            }
        },
        "windowsJumpboxPublisher": {
            "type": "string",
            "defaultValue": "MicrosoftVisualStudio",
            "metadata": {
                "description": "This is the windows publisher used by the windows jumpbox"
            }
        },
        "windowsJumpboxOffer": {
            "type": "string",
            "defaultValue": "VisualStudio",
            "metadata": {
                "description": "This is the windows offer used by the windows jumpbox"
            }
        },
        "windowsJumpboxSku": {
            "type": "string",
            "defaultValue": "VS-2015-Ent-AzureSDK-2.8-WS2012R2.2",
            "metadata": {
                "description": "This is the windows sku used by the windows jumpbox"
            }
        },
        "isValidation": {
            "type": "int",
            "defaultValue": 0,
            "allowedValues": [ 0, 1 ],
            "metadata": {
                "description": "This is testing in the validation region"
            }
        },
        "disablePasswordAuthentication": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "This setting controls whether password auth is disabled for Linux VMs provisioned by this template. Default is true which disables password and makes SSH key required."
            }
        },
        "setLinuxConfigurationForVMCreate": {
            "type": "int",
            "defaultValue": 1,
            "allowedValues": [ 0, 1 ],
            "metadata": {
                "description": "This setting controls whether Linux configuration with SSH Key is passed in VM PUT Payload.  Defaults to 1.  If SSH Key is blank, this must be set to 0."
            }
        },
        "nameSuffix": {
            "type": "string",
            "defaultValue": "01234567",
            "metadata": {
                "description": "A string to include in the names of resources created.  Defaults to 0.  Can not be blank."
            }
        },
        "vmsPerStorageAccount": {
            "type": "int",
            "defaultValue": 5,
            "metadata": {
                "description": "This specifies the number of VMs per storage accounts"
            }
        },
        "postInstallScriptURI": {
            "type": "string",
            "defaultValue": "disabled",
            "metadata": {
                "description": "After installation, this specifies a script to download and install.  To disabled, set value to 'disabled'."
            }
        }
    },
    "variables": {
        "adminUsername": "[parameters('linuxAdminUsername')]",
        "adminPassword": "[parameters('linuxAdminPassword')]",
        "jumpboxEndpointDNSNamePrefix": "[tolower(parameters('jumpboxEndpointDNSNamePrefix'))]",
        "masterEndpointDNSNamePrefix": "[tolower(parameters('masterEndpointDNSNamePrefix'))]",
        "agentEndpointDNSNamePrefix": "[tolower(parameters('agentEndpointDNSNamePrefix'))]",
        "agentCount": "[parameters('agentCount')]",
        "masterCount": "[parameters('masterCount')]",
        "agentVMSize": "[parameters('agentVMSize')]",
        "sshRSAPublicKey": "[parameters('sshRSAPublicKey')]",
        "linuxPublisher": "[parameters('linuxPublisher')]",
        "linuxOffer": "[parameters('linuxOffer')]",
        "linuxSku": "[parameters('linuxSku')]",
        "linuxVersion": "[parameters('linuxVersion')]",
        "windowsJumpboxPublisher": "[parameters('windowsJumpboxPublisher')]",
        "windowsJumpboxOffer": "[parameters('windowsJumpboxOffer')]",
        "windowsJumpboxSku": "[parameters('windowsJumpboxSku')]",
        "windowsAdminUsername": "[parameters('windowsAdminUsername')]",
        "windowsAdminPassword": "[parameters('windowsAdminPassword')]",
        "vmsPerStorageAccount": "[parameters('vmsPerStorageAccount')]",
        "postInstallScriptURI": "[parameters('postInstallScriptURI')]",

        "nameSuffix": "[parameters('nameSuffix')]",

        "isValidation": "[parameters('isValidation')]",
        "storageLocations": [
            "[resourceGroup().location]",
            "East US 2 (Stage)"
        ],
        "storageLocation": "[variables('storageLocations')[variables('isValidation')]]",

        "sshKeyPath": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
        "disablePasswordAuthentication": "[parameters('disablePasswordAuthentication')]",
        "setLinuxConfigurationForVMCreate": "[parameters('setLinuxConfigurationForVMCreate')]",
        "linuxConfigurations": [
            { },
            {
                "disablePasswordAuthentication": "[variables('disablePasswordAuthentication')]",
                "ssh": {
                    "publicKeys": [
                        {
                            "path": "[variables('sshKeyPath')]",
                            "keyData": "[variables('sshRSAPublicKey')]"
                        }
                    ]
                }
            }
        ],
        "linuxConfiguration": "[variables('linuxConfigurations')[variables('setLinuxConfigurationForVMCreate')]]",

        "orchestratorName": "mesos",

        "masterPublicIPAddressName": "[concat(variables('orchestratorName'), '-master-ip-', variables('masterEndpointDNSNamePrefix'), '-', variables('nameSuffix'))]",

        "jumpboxPublicIPAddressName": "[concat(variables('orchestratorName'), '-jumpbox-ip-', variables('jumpboxEndpointDNSNamePrefix'), '-', variables('nameSuffix'))]",

        "marathonEnabled": true,
        "chronosEnabled": true,
        "swarmEnabled": false,
        "osImagePublisher": "[variables('linuxPublisher')]",
        "osImageOffer": "[variables('linuxOffer')]",
        "osImageSKU": "[variables('linuxSku')]",
        "osImageVersion": "[variables('linuxVersion')]",

        "virtualNetworkName": "[concat(variables('orchestratorName'), '-vnet-', variables('nameSuffix'))]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnetName": "[concat(variables('orchestratorName'), '-subnet')]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
        "addressPrefix": "10.0.0.0/16",
        "subnetPrefix": "10.0.0.0/18",
        "storageAccountType": "Standard_GRS",
        "storageAccountPrefixes": [
            "0",
            "6",
            "c",
            "i",
            "o",
            "u",
            "1",
            "7",
            "d",
            "j",
            "p",
            "v",
            "2",
            "8",
            "e",
            "k",
            "q",
            "w",
            "3",
            "9",
            "f",
            "l",
            "r",
            "x",
            "4",
            "a",
            "g",
            "m",
            "s",
            "y",
            "5",
            "b",
            "h",
            "n",
            "t",
            "z"
        ],
        "storageAccountPrefixesCount": "[length(variables('storageAccountPrefixes'))]",
        "storageAccountBaseName": "[concat(uniqueString(variables('masterEndpointDNSNamePrefix')), variables('orchestratorName'))]",
        "masterStorageAccountName": "[concat(variables('storageAccountBaseName'), '0')]",
        "omsStorageAccount": "none",
        "omsStorageAccountKey": "none",
        "clusterInstallParameters": "[concat(variables('masterCount'), ' ',variables('masterVMNamePrefix'), ' ',variables('masterFirstAddr'), ' ',variables('swarmEnabled'),' ',variables('marathonEnabled'),' ',variables('chronosEnabled'),' ',variables('omsStorageAccount'),' ',variables('omsStorageAccountKey'),' ', variables('adminUsername'),' ',variables('postInstallScriptURI'))]",

        "jumpboxNSGName": "[concat(variables('orchestratorName'), '-jumpbox-nsg-', variables('nameSuffix'))]",
        "jumpboxNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('jumpboxNSGName'))]",
        "jumpboxAddr": 4,
        "jumpboxVMName": "[concat('jb-', variables('nameSuffix'))]",
        "jumpboxVMSize": "Standard_A1",

        "jumpboxLinuxInstallParameters": "[concat(variables('adminUsername'), ' ', variables('masterCount'), ' ', variables('masterFirstAddr'))]",
        "jumpboxLinuxCustomScript": "[concat('/usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/configure-ubuntu.sh ',variables('jumpboxLinuxInstallParameters'),' >> /var/log/azure/jumpbox-bootstrap.log 2>&1 &\" &')]",

        "setBrowserFirstTabDefaultPrefix": "powershell.exe -ExecutionPolicy Unrestricted -command \"New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer' ; New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\BrowserEmulation' ; New-ItemProperty -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\BrowserEmulation' -Name IntranetCompatibilityMode -Value 0 -Type DWord; New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\Main' ; New-ItemProperty -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\Main' -Name 'Start Page' -Type String -Value http://\"",
        "setBrowserFirstTabDefaultSuffix": "0:5050",
        "jumpboxWindowsCustomScript": "[concat(variables('setBrowserFirstTabDefaultPrefix'),variables('masterVMNamePrefix'),variables('setBrowserFirstTabDefaultSuffix'))]",

        "masterNSGName": "[concat(variables('orchestratorName'), '-master-nsg-', variables('nameSuffix'))]",
        "masterNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('masterNSGName'))]",
        "masterVMNamePrefix": "[concat(variables('orchestratorName'), '-master-', variables('nameSuffix'), '-')]",
        "masterFirstAddr": 5,

        "masterLbName": "[concat(variables('orchestratorName'), '-master-lb-', variables('nameSuffix'))]",
        "masterVMSize": "Standard_A1",
        "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
        "masterLbIPConfigName": "[concat(variables('orchestratorName'), '-master-lbFrontEnd-', variables('nameSuffix'))]",
        "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
        "masterLbBackendPoolName": "[concat(variables('orchestratorName'), '-master-pool-', variables('nameSuffix'))]",
        "masterCustomScript": "[concat('/bin/bash -c \"/bin/bash /opt/azure/containers/configure-mesos-cluster.sh ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1\"')]",

        "agentNSGName": "agent-nsg",
        "agentNSGName": "[concat(variables('orchestratorName'), '-agent-nsg-', variables('nameSuffix'))]",
        "agentNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('agentNSGName'))]",
        "agentFirstAddr": 20,
        "agentVMNamePrefix": "[concat(variables('orchestratorName'), '-agent-', variables('nameSuffix'), '-')]",



        "agentStorageAccountsCount": "[add(div(variables('agentCount'), variables('vmsPerStorageAccount')), mod(add(mod(variables('agentCount'), variables('vmsPerStorageAccount')),2), add(mod(variables('agentCount'), variables('vmsPerStorageAccount')),1)))]",
        "agentsPerIPv4Octet": 200,
        "agentCustomScript": "[concat('/usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/configure-mesos-cluster.sh ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1 &\" &')]"
    },
    "resources": [
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('jumpboxPublicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('jumpboxEndpointDNSNamePrefix')]"
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('jumpboxNSGName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "description": "Allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('jumpboxVMName'), '-nic')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('jumpboxPublicIPAddressName'))]",
                "[variables('vnetID')]",
                "[variables('jumpboxNSGID')]"
            ],
            "properties": {
                "networkSecurityGroup": {
                    "id": "[variables('jumpboxNSGID')]"
                },
                "ipConfigurations": [
                    {
                        "name": "ipConfig",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0/18')[0], variables('jumpboxAddr'))]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('jumpboxPublicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('jumpboxVMName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('jumpboxVMName'), '-nic')]",
                "[variables('masterStorageAccountName')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('jumpboxVMSize')]"
                },
                "osProfile": {
                    "computername": "[variables('jumpboxVMName')]",
                    "adminUsername": "[variables('windowsAdminUsername')]",
                    "adminPassword": "[variables('windowsAdminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('windowsJumpboxPublisher')]",
                        "offer": "[variables('windowsJumpboxOffer')]",
                        "sku": "[variables('windowsJumpboxSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('jumpboxVMName'),'-osdisk')]",
                        "vhd": {
                            "uri": "[concat('http://', variables('masterStorageAccountName'), '.blob.core.windows.net/vhds/', variables('jumpboxVMName'), '-osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('jumpboxVMName'), '-nic'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('jumpboxVMName'),'/installcustomscript')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('jumpboxVMName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.4",
                "settings": {
                    "commandToExecute": "[variables('jumpboxWindowsCustomScript')]"
                }
            }
        },

        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('masterStorageAccountName')]",
            "apiVersion": "2015-06-15",
            "location": "[variables('storageLocation')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },

        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('masterPublicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('masterEndpointDNSNamePrefix')]"
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "name": "[variables('masterLbName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('masterLbIPConfigName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('masterPublicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('masterLbBackendPoolName')]"
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "masterLbLoopNode",
                "count": "[variables('masterCount')]"
            },
            "dependsOn": [
                "[variables('masterLbID')]"
            ],
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[variables('masterLbIPConfigID')]"
                },
                "protocol": "tcp",
                "frontendPort": "[copyIndex(2200)]",
                "backendPort": 22,
                "enableFloatingIP": false
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('masterNSGName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicLoopNode",
                "count": "[variables('masterCount')]"
            },
            "dependsOn": [
                "[variables('masterLbID')]",
                "[variables('vnetID')]",
                "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex())]",
                "[variables('masterNSGID')]"
            ],
            "properties": {
                "networkSecurityGroup": {
                    "id": "[variables('masterNSGID')]"
                },
                "ipConfigurations": [
                    {
                        "name": "ipConfigNode",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0/18')[0], copyIndex(variables('masterFirstAddr')))]",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex())]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "vmLoopNode",
                "count": "[variables('masterCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex())]",

                "[variables('masterStorageAccountName')]"
            ],
            "properties": {

                "hardwareProfile": {
                    "vmSize": "[variables('masterVMSize')]"
                },
                "osProfile": {
                    "computername": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]",
                    "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-mesos-cluster.sh\n    permissions: \"0744\"\n -  encoding: gzip\n    content: !!binary |\n        H4sIAOAih1YC/+2Y/2/jNBTAf+9fYW2Ruu1I3I0NjhV2OsYhJoE2HRwgJi7ynNc219SObKfbQONv59lO0i9r0pa7CSQuldo0fs/v5b1P7PcCSkkVZ3JItElAqX6nA1MQRpM/OwSPW6nGoGIuhQBuUik0OewdHfc7DygopuT88vWryx/jqzdff39xHl9c/YxDnZExeanPOAetnQE6ZYriCRXDVNxRPxLhhb6ThNqTJUE34OWcYFawOGd8zIaAv2ZEukGuYJDeUfRyQF9EKNDvd0vpVPCsSIBM0glE5j4H7c0lMGBFZmJ7ibA8z1LO7P1RyQ2YUBsFbFLOoUEkgzQDIoVXHgPkLEunEBucVhaGfHZSyu6SQqM10FKHidDumsJ/2RQUOTz6POrh57CeWNnLPlTu3lJtQJDnvdo/L9KvJfz/WLAJkIRLHR3MxpSUhlCZG+rs5yNQgHE26Ci1smGR0kKr0rizJ/1dk6+I15nzxXt+q1ID5K0fDUig+QgmcEppYLMcj6QurVGSg5owgfDMPHp4bOmvajK69+LLQmVn0cF+sGQ2V/LuHm/dxCNgiCX5Ds2QmcV+u/RLRCs34SvBZZKKIdnZWVTQxY2OMaEGA+mQWADgna7SvEKeXLPwj174Rfj7s9PnPcxT4CPAFJKIykQNN9I9Pu5VunykpLDxW1bdRXgRB5YQOUCq7J0UuQeT3CJjBcZkIBVHfjFRYUnZJ4/mIJwhkpmPDR8xMQS9IoA505rYEGNyvXDk8nR60jvp0QBTFaQ6ZmqoA/s1n+SVPGmDp7wRKD/cSpQX2RSsWvx9WPovxRxDnjaE/AmwvwvfsSnTXKW5aUZ4p0tplzwjNnL406U77lIwy5qCJFXLMsO1tNj1tXn1caOtrDiJjVEppf8HpKwKd70E+1xdv6VuNWtej5e2Aa8WHWBCUIFkTJutDKIhnbEp2KDajezMebDfbB9zgrm3KixJFOl257Ywe0ykgphjWFSciryoEqiXH4n+Fnd1g5kcr1SIb+5jW4S4ksDVHAt34+qPTjtZ5bHdtlYev4avgWXhxRUJFEwk+mODsqnut1LdMpVAYs9I4AVxgvguHlRD9mz7+a6UNLJ6RFcGYJ7hWTrXo+NEa2rS5Owad1HcS1+Gv4X/KjfesQVv3gOgj+B8cHCwWE65R8efLsITIT30xYyflfh4RZvRD89P6d+iS9jCIEN0e4j8bB8xasVoLqGrbLhdAFvdGjdXY1SJCmqMKFl1cfMZt1dfp7LqIcCdzbCEGbZENvKCfaZ5zFAl7yFqndp1lJX8Yi2FvTHTrZ1orQeG07XFYdVeNZclpUBTiVi3Z6314S756fKbyz0+YZkUcL9/Sn5gYyBmBOQXuCFvLtzrEFuzMVsU+7xIdR81VDyV1b3HS8s/6XDnV8EJ1lx1CWgbURocbteelW1nY0jL8YaI1k3r5k1/pfLU0bCt9XbRoPl4mDORsBLR6KZIM1y3BzIaFFkW2TcCSx7bFav09ZxhfMJzfKKUzMiOkCG3V5aar7ZHYpW99c+EnSVOxJpXNlairXGy41u/unFKT0714dGnbXn03w+dvwGVUmSwwxQAAA==\n    path: /opt/azure/containers/nginx.conf\n    permissions: \"0744\"\n\n')]",
                    "linuxConfiguration": "[variables('linuxConfiguration')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('osImagePublisher')]",
                        "offer": "[variables('osImageOffer')]",
                        "sku": "[variables('osImageSKU')]",
                        "version": "[variables('osImageVersion')]"
                    },
                    "osDisk": {
                        "name": "[concat(variables('masterVMNamePrefix'), copyIndex(),'-osdisk')]",
                        "vhd": {
                            "uri": "[concat('http://', variables('masterStorageAccountName'), '.blob.core.windows.net/vhds/', variables('masterVMNamePrefix'), copyIndex(), '-osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'), 'nic-', copyIndex()))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(), '/configuremaster')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "vmLoopNode",
                "count": "[variables('masterCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex())]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.3",
                "settings": {
                    "fileUris": [ ],
                    "commandToExecute": "[variables('masterCustomScript')]"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[concat(variables('storageAccountPrefixes')[mod(copyIndex(),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(copyIndex(),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),copyIndex(1))]",
            "apiVersion": "2015-06-15",
            "location": "[variables('storageLocation')]",
            "copy": {
                "name": "vmLoopNode",
                "count": "[variables('agentStorageAccountsCount')]"
            },
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },



        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('agentNSGName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "http",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 210,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "https",
                        "properties": {
                            "description": "Allow HTTPS",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 220,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Tcp8080",
                        "properties": {
                            "description": "Allow port 8080",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 230,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('agentVMNamePrefix'), 'nic-', copyIndex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicLoopNode",
                "count": "[variables('agentCount')]"
            },
            "dependsOn": [
                "[variables('vnetID')]",
                "[variables('agentNSGID')]"
            ],
            "properties": {
                "networkSecurityGroup": {
                    "id": "[variables('agentNSGID')]"
                },
                "ipConfigurations": [
                    {
                        "name": "ipConfigNode",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0.0/18')[0], div(copyIndex(),variables('agentsPerIPv4Octet')), '.', add(mod(copyIndex(),variables('agentsPerIPv4Octet')), variables('agentFirstAddr')))]",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }

                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('agentVMNamePrefix'), copyIndex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "vmLoopNode",
                "count": "[variables('agentCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountPrefixes')[mod(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),add(1,div(copyIndex(),variables('vmsPerStorageAccount'))))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('agentVMNamePrefix'), 'nic-', copyIndex())]"

            ],
            "properties": {

                "hardwareProfile": {
                    "vmSize": "[variables('agentVMSize')]"
                },
                "osProfile": {
                    "computername": "[concat(variables('agentVMNamePrefix'), copyIndex())]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]",
                    "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-mesos-cluster.sh\n    permissions: \"0744\"\n -  encoding: gzip\n    content: !!binary |\n        H4sIAOAih1YC/+2Y/2/jNBTAf+9fYW2Ruu1I3I0NjhV2OsYhJoE2HRwgJi7ynNc219SObKfbQONv59lO0i9r0pa7CSQuldo0fs/v5b1P7PcCSkkVZ3JItElAqX6nA1MQRpM/OwSPW6nGoGIuhQBuUik0OewdHfc7DygopuT88vWryx/jqzdff39xHl9c/YxDnZExeanPOAetnQE6ZYriCRXDVNxRPxLhhb6ThNqTJUE34OWcYFawOGd8zIaAv2ZEukGuYJDeUfRyQF9EKNDvd0vpVPCsSIBM0glE5j4H7c0lMGBFZmJ7ibA8z1LO7P1RyQ2YUBsFbFLOoUEkgzQDIoVXHgPkLEunEBucVhaGfHZSyu6SQqM10FKHidDumsJ/2RQUOTz6POrh57CeWNnLPlTu3lJtQJDnvdo/L9KvJfz/WLAJkIRLHR3MxpSUhlCZG+rs5yNQgHE26Ci1smGR0kKr0rizJ/1dk6+I15nzxXt+q1ID5K0fDUig+QgmcEppYLMcj6QurVGSg5owgfDMPHp4bOmvajK69+LLQmVn0cF+sGQ2V/LuHm/dxCNgiCX5Ds2QmcV+u/RLRCs34SvBZZKKIdnZWVTQxY2OMaEGA+mQWADgna7SvEKeXLPwj174Rfj7s9PnPcxT4CPAFJKIykQNN9I9Pu5VunykpLDxW1bdRXgRB5YQOUCq7J0UuQeT3CJjBcZkIBVHfjFRYUnZJ4/mIJwhkpmPDR8xMQS9IoA505rYEGNyvXDk8nR60jvp0QBTFaQ6ZmqoA/s1n+SVPGmDp7wRKD/cSpQX2RSsWvx9WPovxRxDnjaE/AmwvwvfsSnTXKW5aUZ4p0tplzwjNnL406U77lIwy5qCJFXLMsO1tNj1tXn1caOtrDiJjVEppf8HpKwKd70E+1xdv6VuNWtej5e2Aa8WHWBCUIFkTJutDKIhnbEp2KDajezMebDfbB9zgrm3KixJFOl257Ywe0ykgphjWFSciryoEqiXH4n+Fnd1g5kcr1SIb+5jW4S4ksDVHAt34+qPTjtZ5bHdtlYev4avgWXhxRUJFEwk+mODsqnut1LdMpVAYs9I4AVxgvguHlRD9mz7+a6UNLJ6RFcGYJ7hWTrXo+NEa2rS5Owad1HcS1+Gv4X/KjfesQVv3gOgj+B8cHCwWE65R8efLsITIT30xYyflfh4RZvRD89P6d+iS9jCIEN0e4j8bB8xasVoLqGrbLhdAFvdGjdXY1SJCmqMKFl1cfMZt1dfp7LqIcCdzbCEGbZENvKCfaZ5zFAl7yFqndp1lJX8Yi2FvTHTrZ1orQeG07XFYdVeNZclpUBTiVi3Z6314S756fKbyz0+YZkUcL9/Sn5gYyBmBOQXuCFvLtzrEFuzMVsU+7xIdR81VDyV1b3HS8s/6XDnV8EJ1lx1CWgbURocbteelW1nY0jL8YaI1k3r5k1/pfLU0bCt9XbRoPl4mDORsBLR6KZIM1y3BzIaFFkW2TcCSx7bFav09ZxhfMJzfKKUzMiOkCG3V5aar7ZHYpW99c+EnSVOxJpXNlairXGy41u/unFKT0714dGnbXn03w+dvwGVUmSwwxQAAA==\n    path: /opt/azure/containers/nginx.conf\n    permissions: \"0744\"\n\n')]",
                    "linuxConfiguration": "[variables('linuxConfiguration')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('osImagePublisher')]",
                        "offer": "[variables('osImageOffer')]",
                        "sku": "[variables('osImageSKU')]",
                        "version": "[variables('osImageVersion')]"
                    },
                    "osDisk": {
                        "name": "[concat(variables('agentVMNamePrefix'), copyIndex(),'-osdisk')]",
                        "vhd": {
                            "uri": "[concat('http://',variables('storageAccountPrefixes')[mod(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(div(copyIndex(),variables('vmsPerStorageAccount')),variables('storageAccountPrefixesCount'))],variables('storageAccountBaseName'),add(1,div(copyIndex(),variables('vmsPerStorageAccount'))), '.blob.core.windows.net/vhds/', variables('agentVMNamePrefix'), copyIndex(), '-osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentVMNamePrefix'), 'nic-', copyIndex()))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('agentVMNamePrefix'), copyIndex(), '/configureagent')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "vmLoopNode",
                "count": "[variables('agentCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('agentVMNamePrefix'), copyIndex())]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.3",
                "settings": {
                    "fileUris": [ ],
                    "commandToExecute": "[variables('agentCustomScript')]"
                }
            }
        }
    ],
    "outputs": {
        "jumpboxFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('jumpboxPublicIPAddressName'))).dnsSettings.fqdn]"
        },
        "masterFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))).dnsSettings.fqdn]"
        }

    }
}
